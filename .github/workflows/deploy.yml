name: Alumni Frontend CI/CD

on:
  push:
    branches: [master]  # change to 'main' if needed

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: alumni-frontend
  ECS_CLUSTER: alumni-cluster
  ECS_SERVICE: alumni-frontend-service
  CONTAINER_NAME: alumni-frontend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install
        working-directory: .

      - name: Build Angular app
        run: npm run build -- --configuration production
        working-directory: .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        id: push-image
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY

          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_URI:$IMAGE_TAG
          docker push $ECR_URI:$IMAGE_TAG

          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Get current task definition
        id: get-task-def
        run: |
          aws ecs describe-task-definition \
            --task-definition alumni-frontend \
            --query "taskDefinition" > task-definition.json

      - name: Create new task definition with updated image
        id: new-task-def
        run: |
          cat task-definition.json | jq \
            --arg IMAGE "$ECR_URI:$IMAGE_TAG" \
            '.
            | .containerDefinitions[0].image = $IMAGE
            | del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' \
            > new-task-def.json

      - name: Register new task definition revision
        id: register-task-def
        run: |
          NEW_REVISION=$(aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          echo "TASK_DEF_ARN=$NEW_REVISION" >> $GITHUB_ENV

      - name: Update ECS service to use new task revision
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --task-definition $TASK_DEF_ARN \
            --region $AWS_REGION
